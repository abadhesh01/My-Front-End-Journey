                                                          
                                        *******************
                                        ||CSS Short Notes||
                                        *******************

-> Introduction:
   * "CSS" stands for "Cascading Style Sheet".
   * It is used to style a web page( including the design, layout and variations in display for different devices
     and screen sizes).
   * Syntax::
  
      selector  {
                  property_name_1: property_value_1;
                  property_name_2: property_value_2;
                  property_name_3: property_value_3;
                  .......
                }

    # "selector" points to the HTML element to be styled.
    # The curly braces ({}) define the "declaration box". 
    # "declaration box" contains one or more "declarations".
    # A "declaration" is a pair of "property_name" and "property_value".   

-> Selectors:
   * Definition: "Selects the HTML element to  be styled." 
   * Selectors are categorized into 5 categories. 
     They are: [1] Simple Selectors =>
               -----------------------
                   [1.1] Definition: "Selects elements on the basis of element name, id or class."
                   [1.2] Syntax for element selector::
                                                     element_name {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;                                                                   
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                  }
                   [1.3] Syntax for id selector::
                                                        #id_value {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3; 
                                                                   .......
                                                                  }
                   [1.4] Syntax for class selector::
                                                     .class_value {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                   }
                   [1.5] Syntax for universal selector::  
                                                               * {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }
                   [1.6] Syntax for selecting element(s) having "class" attribute with specified value::
                                                                 
                                        element_name.class_value {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }
                   [1.7] Syntax for selecting multiple elements:: 
                                    
                                      element_name_1, element_name_2, element_name_3, ....., {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }  

                   [1.8] For more details, visit:
                         https://www.w3schools.com/css/css_selectors.asp    

                   [1.9] For demo, refer to "index.html" file.

               
               [2] Combinator Selectors =>
               ---------------------------
                   [2.1] Definition: "Selects elements on the basis of relationship between them."
                   [2.2] These are of the following 4 types:
                         [2.2.1] Descendant Selector (space) 
                         [2.2.2] Child Selector (>)
                         [2.2.3] Adjacent Sibling Selector (+)  
                         [2.2.4] General Sibling Selector (~) 

                   [2.3] Syntax for:
                         [2.3.1] Descendant Selector (space):: 
                           
                                 element_name  descendant_element(s)_name_ {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }                                   
   
                         [2.3.2] Child Selector (>)::

                                 element_name > child_element(s)_name {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }                                   

                           
                         [2.3.3] Adjacent Sibling Selector (+)::

                                 element_name + sibling_element(s)_name {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                 }                                   
 
                         [2.3.4] General Sibling Selector (~)::
                                   
                                 element_name ~ sibling_element(s)_name {
                                                                   property_name_1: property_value_1;
                                                                   property_name_2: property_value_2;
                                                                   property_name_3: property_value_3;
                                                                   .......
                                                                  }       
                   

                   [2.4] For more details, visit:  
                         https://www.w3schools.com/css/css_combinators.asp     

                   [2.5] For demo, refer to "index02.html" file.     


               [3] Pseudo-Class Selectors (:) =>
               ---------------------------------
                   [3.1] Definition: "Selects elements on the basis of certain state."
                   [3.2] Syntax:     

                                 selector :pseudo-class {
                                                        property_name_1: property_value_1;
                                                        property_name_2: property_value_2;
                                                        property_name_3: property_value_3;
                                                        .......
                                                        } 

                   [3.3] Examples -
                          [3.3.1] :link   
                          [3.3.2] :visited                                    
                          [3.3.3] :hover
                          [3.3.4] :active
                          [3.3.5] :first-child
                          [3.3.6] :lang
                          [3.3.7] :focus

                   [3.4] For more details, visit:
                          https://www.w3schools.com/css/css_pseudo_classes.asp                                            

                   [3.5] For demo, refer to "index03.html" file.  


               [4] Pseudo-Element Selectors (::) =>
               ------------------------------------
                   [4.1] Definition: "Selects and styles a part of an element."
                   [4.2] Syntax:     

                                 selector ::pseudo-element {
                                                            property_name_1: property_value_1;
                                                            property_name_2: property_value_2;
                                                            property_name_3: property_value_3;
                                                            .......
                                                           } 

                   [4.3] Examples -
                          [4.3.1]  ::after 
                          [4.3.2]  ::before 
                          [4.3.3]  ::first-letter
                          [4.3.4]  ::first-line
                          [4.3.5]  ::marker
                          [4.3.6]  ::selection                                      

                   [4.4] For more details, visit:
                          https://www.w3schools.com/css/css_pseudo_elements.asp                                            

                   [4.5] For demo, refer to "index03.html" file.


               [5] Attribute Selectors =>
               --------------------------  
                    [5.1] Definition: "Selects elements on the basis of attribute or attribute value."
                    [5.2] Selector Syntax with meaning:
                          [5.2.1] [attribute] - Select all elements with the specified attribute.

                          [5.2.2] element_name[attribute] - Select specified element(s) with the specified attribute.

                          [5.2.3] [attribute="value"] - Select all elements with the specified attribute and attribute value.

                          [5.2.4] [attribute~="value"] - Select all elements with the specified attribute having a space separated
                                                         list of values among which one value is the specified value.
                                                         
                          [5.2.5] [attribute|="value"] - Select all elements with the specified attribute, whose value can be 
                                                         exactly the specified value, or starts with the specified value followed 
                                                         by a hyphen (-) which again may or may not be followed by any text.
                          
                          [5.2.6] [attribute^="value"] - Select all elements with the specified attribute, whose value starts with 
                                                         the specified value.

                          [5.2.7] [attribute$="value"] - Select all elements with the specified attribute, whose value ends with 
                                                         the specified value.

                          [5.2.8] [attribute*="value"] - Select all elements with the specified attribute, whose value has a
                                                         substring same as the specified value.
                    [5.3] For more, visit:
                          https://www.w3schools.com/css/css_attribute_selectors.asp

                    [5.4] For demo, refer to "index04.html" file.      

-> Inserting CSS:
   * There are the following 3 ways of styling a HTML page::
     [1] External CSS => 
         # The HTML page includes a reference to the external style sheet file inside the <link> element, inside the head section.
         # The style sheet file name ends with a ".css" extension which contains the CSS rules.
         # Benefit - Code Reusability.
     [2] Internal CSS =>
         # The internal style is defined inside the <style> element, inside the head section.
         # Benefit - Used for styling a single HTML page having an unique style. 
     [3] Inline CSS => 
         # The inline style is defined inside the "style" attribute of a HTML element.
         # Benefit - Used to apply a unique style for a single HTML element.

   * If some properties have been defined for the same selector(element) in different style sheets, the value from the last read 
     style sheet will be used. 

   * Cascading order of inserting CSS from highest to lowest priority:
     [1] Inline Style (Highest Priority)
     [2] External and Internal Style Sheets
     [3] Browser Default (Lowest Priority)

   * For demo, refer to "index05.html" file.     

-> Comments:
   [1] Comments are used for documenting source codes.
   [2] Comments are ignored by the web browsers.
   [3] Syntax for single line comment =>
   
       /* Sample single line comment. */
  
   [4] Syntax for multi line comment => 
    
      /* 
        Sample 
          multi line
           comment. 
       */
   [5] For demo, refer to "index06.html" file.   
  
-> Colors:
   * Colors can be specified in the following 3 ways =>
     [1] Color Names::
         Example - red, green, blue, white, black, lightgrey, grey, tomato, 
                   orange, dodgerblue, mediumseagreen, slateblue and violet etc.
     
     [2] Color Values::
         It can be represented in terms of - 
         [2.1] RGB Values 
         [2.2] RGBA Values
         [2.3] HEX Values
         [2.4] HSL Values
         [2.5] HSLA Values
         
     [3] CSS "currentcolor" Keyword:: 
         Refers to the value of the "color" property of a HTML element.
   
   * RGB (RED GREEN BLUE)::
     ----------------------
     [1] Formula: rgb(RED, GREEN, BLUE)      
     [2] RED - Intensity of red color.
     [3] GREEN - Intensity of green color.
     [4] BLUE - Intensity of blue color.
     [5] The intensity of the colors can be specified between 0(lowest) to 255(highest).
         It can also be specified in terms of percentage(%) (from 0% to 100%).  
     [6] "rgb(0, 0, 0)" represents black color. 
     [7] "rgb(255, 255, 255)" represents white color.
     [8] Shades of gray are often defined using equal values for RED, GREEN and BLUE colors.
      
   * RGBA (RED GREEN BLUE ALPHA)::
     -----------------------------
     [1] Formula: rgba(RED, GREEN, BLUE, ALPHA)
     [2] RGBA is the extension of RGB.
     [3] It has just one additional parameter called as "ALPHA".
     [4] ALPHA represents the opacity / transparency of a color.
     [5] The value of ALPHA can be specified between 0.0 (fully transparent) and 1.0 (not transparent at all).
   
   * HEX (HEXADECIMAL)::
     --------------------   
     [1] Formula: #RRGGBB
     [2] R - Intensity of red color.
     [3] G - Intensity of green color.
     [4] B - Intensity of blue color.
     [5] The intensity of the colors can be specified between [0(lowest) to 9] and [A/a to F/f(highest)].
     [6] "#000000" represents black color. 
     [7] "#ffffff" represents white color.
     [8] Shades of gray are often defined using equal values for "R", "G" and "B" colors.
     [9] The formula "#RRGGBB" can be represented as "#RGB" only if both the values (RR, GG, and BB) 
         are the same for each component.  

   * HEX with transparency::
     ----------------------- 
     [1] To add transparency to a HEX value, add two additional digits between "00" and "FF (/ ff)".      
     [2] "00" is fully transparent and "FF (/ ff)" is not transparent at all.

   * HSL (HUE SATURATION LIGHTNESS)::
     --------------------------------
     [1] Formula: hsl(HUE, SATURATION, LIGHTNESS)
     [2] HUE - * Specifies the degree of color on the color wheel.
               * It can be specified between 0 to 360.
               * 0 is red color, 120 is green color and 240 is blue color.
     [3] SATURATION - * Specifies the intensity of color (or shade of grey).
                      * It is specified in terms of percentage(%) between 
                        0%(pure grey / no color) to 100%(no grey / pure color).
     [4] LIGHTNESS -  * Specifies the intensity of light.                    
                      * It is specified in terms of percentage(%) 
                        between 0%(no light / black) to 100%(full light / white).
                      * 50% of lightness is normal as it is neither dark nor light.  

   * HSLA (HUE SATURATION LIGHTNESS ALPHA)::
     ---------------------------------------
     [1] Formula: hsla(HUE, SATURATION, LIGHTNESS, ALPHA)
     [2] HSLA is the extension of HSL.
     [3] It has just one additional parameter called as "ALPHA".
     [4] ALPHA represents the opacity / transparency of a color.
     [5] The value of ALPHA can be specified between 0.0 (fully transparent) and 1.0 (not transparent at all).

   * HTML and CSS supports 140 standard colors. 
     Click the link below to see them.
     https://www.w3schools.com/colors/colors_names.asp

   * For HTML Color Codes, visit:
     https://htmlcolorcodes.com/

   * For demo, refer to "index07.html", "index08.html" and "index09.html" files.  

-> CSS Background:
   ***************
   [1] background-color - Specifies the background color of an element.
   
   [2] opacity - * Defines the opacity / transparency of an element (i.e. for both background and the text).
                 * It can be specified between the values from 0.0(lowest) to 1.0(highest).
                 * The opacity is applied to both content and background.
                 * The opacity defined for an element is inherited to all of it's child elements.
   
   [3] background-image - Specifies an image to use as the background of an element.
   
   [4] background-repeat - Specifies whether to repeat the background image vertically or horizontally.
   
   [5] background-position - Specify the position of the background image.   
   
   [6] background-attachment - Specifies whether the background image should scroll or be fixed.
   
   [7] background-clip - Defines how far the background (color or image) should extend within an element.
   
   [8] background-origin - Specifies the origin position (the background positioning area) of a background image.
                           This property has no effect if "background-attachment" is "fixed".
   
   [9] background-size - Specifies the size of the background image(s).           
   
   [10] background - Shorthand property for all background related properties.
                     When using the shorthand property the order of the property values is:
                     # background-color
                     # background-image
                     # background-repeat
                     # background-attachment 
                     # background-position  
   
   [11] Note: The background of an element is the total size of the element, including padding and border only.
   
   [12] For more details, visit:
        https://www.w3schools.com/css/css_background_shorthand.asp
   
-> CSS Border:
   ***********
   [1] border-style - Specifies what kind of border to display.
   
   [2] border-width - Specifies the width of the four borders.
   
   [3] border-color - * Specifies the color of the four borders.
                      * If not set, it inherits the color of the element.
   
   [4] border-radius -	Specifies all the four border-*-radius properties for rounded corners.
   
   [5] border - Shorthand property for all border related properties.
                 
   [6] border-top - Shorthand property for top side border related properties.
   
   [7] border-bottom - Shorthand property for bottom side border related properties.
                   
   [8] border-left - Shorthand property for left side border related properties.
   
   [9] border-right - Shorthand property for right side border related properties.
   
   [10] All the border related shorthand properties specify the following 3 properties -
        [10.1] border-width
        [10.2] border-style (required)
        [10.3] border-color
   
   [11] For more details, visit:
        https://www.w3schools.com/css/css_border.asp
    
-> CSS Margin:
   ***********
   # Definition:: "Margins are used to create space around the elements, outside of any defined borders."
   
   [1] margin-top - Specifies the top margin of an element.
   
   [2] margin-bottom - Specifies the bottom margin of an element. 
   
   [3] margin-left - Specifies the left margin of an element.
   
   [4] margin-right	- Specifies the right margin of an element.
   
   [5] margin - * Shorthand property for setting all the margin properties in one declaration.
                * It specifies the following individual properties respectively:
                  [5.1] margin-top
                  [5.2] margin-right
                  [5.2] margin-bottom
                  [5.2] margin-left
   
   [6] For more details, visit:
       https://www.w3schools.com/css/css_margin.asp
     
-> CSS Padding:
   ************
   # Definition:: "Padding is used to create space around an element's content, inside of any defined borders." 
   
   [1] padding-top - Specifies the top padding of an element.
   
   [2] padding-bottom - Specifies the bottom padding of an element. 
   
   [3] padding-left - Specifies the left padding of an element.
   
   [4] padding-right	- Specifies the right padding of an element.
   
   [5] padding - * Shorthand property for setting all the padding properties in one declaration.
                 * It specifies the following individual properties respectively:
                  [5.1] padding-top
                  [5.2] padding-right
                  [5.2] padding-bottom
                  [5.2] padding-left
   
   [6] box-sizing: border-box - * Causes the element to maintain its actual width. 
                                * If you increase the padding, the available content space will decrease.
                                * For more details, visit:
                                  https://www.w3schools.com/cssref/css3_pr_box-sizing.php
    
   [7] For more details, visit:
       https://www.w3schools.com/css/css_padding.asp
   
-> CSS Height and Width:
   *********************
   [1] height -	Specifies the height of the content area of an element.
   
   [2] overflow - * Specifies what should happen if content overflows an element's box.
                  * It only works for block elements with a specified height.
                  * For more details, visit:
                    https://www.w3schools.com/cssref/pr_pos_overflow.php
   
   [3] width -	Specifies the width of the content area of an element.
   
   [4] max-height -	Specifies the maximum height of the content area of an element.
   
   [5] max-width -	Specifies the maximum width of the content area of an element.
   
   [6] min-height -	Specifies the minimum height of the content area of an element.
    
   [7] min-width -	Specifies the minimum width of the content area of an element.
   
   [8] Note: * "height" and "width" properties do not include padding, borders, or margins.
               They set the height/width of the area inside the padding, border, and margin of the element.    
   
             * If both the "width" property and the "max-width" property is specified on the same element, 
               and the value of the "width" property is larger than the "max-width" property; 
               the "max-width" property will be used and the "width" property will be ignored.   
   
   [9] For more details, visit:
       https://www.w3schools.com/css/css_dimension.asp           
   
-> CSS Box Model:
   **************
   # Definition:: "Box that wraps around every HTML element."
   
   # It has the following 4 parts mentioned in the order of innermost part to outermost part: 
     1. Content(It can be an image or text that appears.) [Innermost]
     2. Padding
     3. Border
     4. Margin                                            [Outermost]
     To visualize box model, visit: 
     https://miro.medium.com/v2/resize:fit:1400/1*E_YuB8x1B3T3h6PIJ_I9qQ.png
   
   # For more details, visit: 
     https://www.w3schools.com/css/css_boxmodel.asp
     
-> CSS Outline:
   ************
   [1] Definition:: "An outline is a line that is drawn around elements, OUTSIDE the borders
                     (, to make the element stand out.)"      
   
   [2] outline-style - Specifies the style of the outline.
   
   [3] outline-width - Specifies the width of the outline.
   
   [4] outline-color - Specifies the color of the outline.
   
   [5] outline-offset - Specifies (transparent) space between an outline and the edge/border of an element.
   
   [6] outline - * Shorthand property for setting all the outline properties in one declaration.
                 * It specifies the following individual properties respectively:
                   [6.1] outline-width
                   [6.2] outline-style (required)
                   [6.3] outline-color
   
   [7] Note::  * The outline is NOT a part of the element's dimensions. 
               * The element's total width and height is not affected by the "width" of the outline.   
               * It may overlap other content.
                     
   [8] For more details, visit:
       https://www.w3schools.com/css/css_outline.asp
                                